V8 version 11.1.0 (candidate)
d8> function hot_function(obj) {return obj.x;}
undefined

d8> for (let i=0; i < 1; i++) {hot_function({x:i});}
0

d8> %DebugPrint(hot_function)
DebugPrint: 0x3ee60025a481: [Function] in OldSpace
 - map: 0x3ee6002442e1 <Map[32](HOLEY_ELEMENTS)> [FastProperties]
 - prototype: 0x3ee600244209 <JSFunction (sfi = 0x3ee60020ae3d)>
 - elements: 0x3ee6000022a9 <FixedArray[0]> [HOLEY_ELEMENTS]
 - function prototype:
 - initial_map:
 - shared_info: 0x3ee60025a3bd <SharedFunctionInfo hot_function>
 - name: 0x3ee60025a32d <String[12]: #hot_function>
 - builtin: InterpreterEntryTrampoline
 - formal_parameter_count: 1
 - kind: NormalFunction
 - context: 0x3ee600243bc1 <NativeContext[273]>
 - code: 0x3ee60020b4ed <CodeDataContainer BUILTIN InterpreterEntryTrampoline>
 - interpreted
 - bytecode: 0x3ee60025b6c9 <BytecodeArray[5]>
 - source code: (obj) {return obj.x;}
 - properties: 0x3ee6000022a9 <FixedArray[0]>
 - All own properties (excluding elements): {
    0x3ee600006e61: [String] in ReadOnlySpace: #length: 0x3ee6002042fd <AccessorInfo name= 0x3ee600006e61 <String[6]: #length>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee6000070a9: [String] in ReadOnlySpace: #name: 0x3ee6002042e5 <AccessorInfo name= 0x3ee6000070a9 <String[4]: #name>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee60000617d: [String] in ReadOnlySpace: #arguments: 0x3ee6002042b5 <AccessorInfo name= 0x3ee60000617d <String[9]: #arguments>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee600006411: [String] in ReadOnlySpace: #caller: 0x3ee6002042cd <AccessorInfo name= 0x3ee600006411 <String[6]: #caller>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee600007379: [String] in ReadOnlySpace: #prototype: 0x3ee600204315 <AccessorInfo name= 0x3ee600007379 <String[9]: #prototype>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
 }
 - feedback vector: No feedback vector, but we have a closure feedback cell array
0x3ee600003f89: [ClosureFeedbackCellArray] in ReadOnlySpace
 - map: 0x3ee600002b05 <Map(CLOSURE_FEEDBACK_CELL_ARRAY_TYPE)>
 - length: 0
0x3ee6002442e1: [Map] in OldSpace
 - type: JS_FUNCTION_TYPE
 - instance size: 32
 - inobject properties: 0
 - elements kind: HOLEY_ELEMENTS
 - unused property fields: 0
 - enum length: invalid
 - stable_map
 - callable
 - constructor
 - has_prototype_slot
 - back pointer: 0x3ee6000022e1 <undefined>
 - prototype_validity cell: 0x3ee600003875 <Cell value= 1>
 - instance descriptors (own) #5: 0x3ee600244309 <DescriptorArray[5]>
 - prototype: 0x3ee600244209 <JSFunction (sfi = 0x3ee60020ae3d)>
 - constructor: 0x3ee6002442ad <JSFunction Function (sfi = 0x3ee60021788d)>
 - dependent code: 0x3ee6000022b9 <Other heap object (WEAK_ARRAY_LIST_TYPE)>
 - construction counter: 0

function hot_function(obj) {return obj.x;}

d8> for (let i=0; i < 10000; i++) {hot_function({x:i});}
[marking 0x3ee60025b94d <JSFunction (sfi = 0x3ee60025b879)> for optimization to TURBOFAN, ConcurrencyMode::kConcurrent, reason: small function]
[compiling method 0x3ee60025b94d <JSFunction (sfi = 0x3ee60025b879)> (target TURBOFAN) OSR, mode: ConcurrencyMode::kConcurrent]
[completed compiling 0x3ee60025b94d <JSFunction (sfi = 0x3ee60025b879)> (target TURBOFAN) OSR - took 0.109, 2.536, 0.181 ms]
[completed optimizing 0x3ee60025b94d <JSFunction (sfi = 0x3ee60025b879)> (target TURBOFAN) OSR]
9999

d8> for (let i=0; i < 10000; i++) {hot_function({x:i})}
[marking 0x3ee60025c3e5 <JSFunction (sfi = 0x3ee60025bf59)> for optimization to TURBOFAN, ConcurrencyMode::kConcurrent, reason: small function]
[compiling method 0x3ee60025c3e5 <JSFunction (sfi = 0x3ee60025bf59)> (target TURBOFAN) OSR, mode: ConcurrencyMode::kConcurrent]
[completed compiling 0x3ee60025c3e5 <JSFunction (sfi = 0x3ee60025bf59)> (target TURBOFAN) OSR - took 0.017, 1.531, 0.059 ms]
[completed optimizing 0x3ee60025c3e5 <JSFunction (sfi = 0x3ee60025bf59)> (target TURBOFAN) OSR]
9999

d8> for (let i=0; i < 10000; i++) {hot_function({x:i})}
[marking 0x3ee60025c661 <JSFunction (sfi = 0x3ee60025bf59)> for optimization to TURBOFAN, ConcurrencyMode::kConcurrent, reason: small function]
[compiling method 0x3ee60025c661 <JSFunction (sfi = 0x3ee60025bf59)> (target TURBOFAN) OSR, mode: ConcurrencyMode::kConcurrent]
[completed compiling 0x3ee60025c661 <JSFunction (sfi = 0x3ee60025bf59)> (target TURBOFAN) OSR - took 0.017, 1.572, 0.049 ms]
[completed optimizing 0x3ee60025c661 <JSFunction (sfi = 0x3ee60025bf59)> (target TURBOFAN) OSR]
9999

d8> for (let i=0; i < 10000; i++) {hot_function({x:i})}
[marking 0x3ee60025c8bd <JSFunction (sfi = 0x3ee60025bf59)> for optimization to TURBOFAN, ConcurrencyMode::kConcurrent, reason: small function]
[marking 0x3ee60025a481 <JSFunction hot_function (sfi = 0x3ee60025a3bd)> for optimization to TURBOFAN, ConcurrencyMode::kConcurrent, reason: small function]
[compiling method 0x3ee60025a481 <JSFunction hot_function (sfi = 0x3ee60025a3bd)> (target TURBOFAN), mode: ConcurrencyMode::kConcurrent]
[completed compiling 0x3ee60025a481 <JSFunction hot_function (sfi = 0x3ee60025a3bd)> (target TURBOFAN) - took 0.018, 0.642, 0.048 ms]
[completed optimizing 0x3ee60025a481 <JSFunction hot_function (sfi = 0x3ee60025a3bd)> (target TURBOFAN)]
[compiling method 0x3ee60025c8bd <JSFunction (sfi = 0x3ee60025bf59)> (target TURBOFAN) OSR, mode: ConcurrencyMode::kConcurrent]
[completed compiling 0x3ee60025c8bd <JSFunction (sfi = 0x3ee60025bf59)> (target TURBOFAN) OSR - took 0.010, 1.345, 0.040 ms]
[completed optimizing 0x3ee60025c8bd <JSFunction (sfi = 0x3ee60025bf59)> (target TURBOFAN) OSR]

d8> %DisassembleFunction(hot_function)
0x3ee60025ca19: [CodeDataContainer] in OldSpace
 - map: 0x3ee600003d7d <Map[24](CODE_DATA_CONTAINER_TYPE)>
 - kind: TURBOFAN
 - is_off_heap_trampoline: 0
 - code: 0x7a09a0004901 <Code TURBOFAN>
 - code_entry_point: 0x7a09a0004940
 - kind_specific_flags: 4

d8> %DebugPrint(hot_function)
DebugPrint: 0x3ee60025a481: [Function] in OldSpace
 - map: 0x3ee6002442e1 <Map[32](HOLEY_ELEMENTS)> [FastProperties]
 - prototype: 0x3ee600244209 <JSFunction (sfi = 0x3ee60020ae3d)>
 - elements: 0x3ee6000022a9 <FixedArray[0]> [HOLEY_ELEMENTS]
 - function prototype:
 - initial_map:
 - shared_info: 0x3ee60025a3bd <SharedFunctionInfo hot_function>
 - name: 0x3ee60025a32d <String[12]: #hot_function>
 - formal_parameter_count: 1
 - kind: NormalFunction
 - context: 0x3ee600243bc1 <NativeContext[273]>
 - code: 0x3ee60025ca19 <CodeDataContainer TURBOFAN>
 - source code: (obj) {return obj.x;}
 - properties: 0x3ee6000022a9 <FixedArray[0]>
 - All own properties (excluding elements): {
    0x3ee600006e61: [String] in ReadOnlySpace: #length: 0x3ee6002042fd <AccessorInfo name= 0x3ee600006e61 <String[6]: #length>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee6000070a9: [String] in ReadOnlySpace: #name: 0x3ee6002042e5 <AccessorInfo name= 0x3ee6000070a9 <String[4]: #name>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee60000617d: [String] in ReadOnlySpace: #arguments: 0x3ee6002042b5 <AccessorInfo name= 0x3ee60000617d <String[9]: #arguments>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee600006411: [String] in ReadOnlySpace: #caller: 0x3ee6002042cd <AccessorInfo name= 0x3ee600006411 <String[6]: #caller>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee600007379: [String] in ReadOnlySpace: #prototype: 0x3ee600204315 <AccessorInfo name= 0x3ee600007379 <String[9]: #prototype>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
 }
 - feedback vector: 0x3ee60025b979: [FeedbackVector] in OldSpace
 - map: 0x3ee600002b2d <Map(FEEDBACK_VECTOR_TYPE)>
 - length: 2
 - shared function info: 0x3ee60025a3bd <SharedFunctionInfo hot_function>
 - no optimized code
 - tiering state: TieringState::kNone
 - maybe has maglev code: 0
 - maybe has turbofan code: 0
 - invocation count: 27531
 - profiler ticks: 0
 - closure feedback cell array: 0x3ee600003f89: [ClosureFeedbackCellArray] in ReadOnlySpace
 - map: 0x3ee600002b05 <Map(CLOSURE_FEEDBACK_CELL_ARRAY_TYPE)>
 - length: 0

 - slot #0 LoadProperty MONOMORPHIC
   [weak] 0x3ee60025b671 <Map[16](HOLEY_ELEMENTS)>: LoadHandler(Smi)(kind = kField, is in object = 1, is double = 0, field index = 3) {
     [0]: [weak] 0x3ee60025b671 <Map[16](HOLEY_ELEMENTS)>
     [1]: 1668
  }

d8> %DebugPrintPtr(0x3ee60025b979)
DebugPrint: 0x3ee60025b979: [FeedbackVector] in OldSpace
 - map: 0x3ee600002b2d <Map(FEEDBACK_VECTOR_TYPE)>
 - length: 2
 - shared function info: 0x3ee60025a3bd <SharedFunctionInfo hot_function>
 - no optimized code
 - tiering state: TieringState::kNone
 - maybe has maglev code: 0
 - maybe has turbofan code: 0
 - invocation count: 27531
 - profiler ticks: 0
 - closure feedback cell array: 0x3ee600003f89: [ClosureFeedbackCellArray] in ReadOnlySpace
 - map: 0x3ee600002b05 <Map(CLOSURE_FEEDBACK_CELL_ARRAY_TYPE)>
 - length: 0

 - slot #0 LoadProperty MONOMORPHIC
   [weak] 0x3ee60025b671 <Map[16](HOLEY_ELEMENTS)>: LoadHandler(Smi)(kind = kField, is in object = 1, is double = 0, field index = 3) {
     [0]: [weak] 0x3ee60025b671 <Map[16](HOLEY_ELEMENTS)>
     [1]: 1668
  }


=========== ANOTHER EXAMPLE ===========
d8> function add(i) {return 1 + i}
undefined

d8> for (let i=0; i<100; i++) {add(i);}
100

d8> %DebugPrint(add)
DebugPrint: 0x3ee60025d3b9: [Function] in OldSpace
 - map: 0x3ee6002442e1 <Map[32](HOLEY_ELEMENTS)> [FastProperties]
 - prototype: 0x3ee600244209 <JSFunction (sfi = 0x3ee60020ae3d)>
 - elements: 0x3ee6000022a9 <FixedArray[0]> [HOLEY_ELEMENTS]
 - function prototype:
 - initial_map:
 - shared_info: 0x3ee60025d2f5 <SharedFunctionInfo add>
 - name: 0x3ee6000060d9 <String[3]: #add>
 - builtin: InterpreterEntryTrampoline
 - formal_parameter_count: 1
 - kind: NormalFunction
 - context: 0x3ee600243bc1 <NativeContext[273]>
 - code: 0x3ee60020b4ed <CodeDataContainer BUILTIN InterpreterEntryTrampoline>
 - interpreted
 - bytecode: 0x3ee60025d539 <BytecodeArray[9]>
 - source code: (i) {return 1 + i}
 - properties: 0x3ee6000022a9 <FixedArray[0]>
 - All own properties (excluding elements): {
    0x3ee600006e61: [String] in ReadOnlySpace: #length: 0x3ee6002042fd <AccessorInfo name= 0x3ee600006e61 <String[6]: #length>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee6000070a9: [String] in ReadOnlySpace: #name: 0x3ee6002042e5 <AccessorInfo name= 0x3ee6000070a9 <String[4]: #name>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee60000617d: [String] in ReadOnlySpace: #arguments: 0x3ee6002042b5 <AccessorInfo name= 0x3ee60000617d <String[9]: #arguments>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee600006411: [String] in ReadOnlySpace: #caller: 0x3ee6002042cd <AccessorInfo name= 0x3ee600006411 <String[6]: #caller>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
    0x3ee600007379: [String] in ReadOnlySpace: #prototype: 0x3ee600204315 <AccessorInfo name= 0x3ee600007379 <String[9]: #prototype>, data= 0x3ee6000022e1 <undefined>> (const accessor descriptor), location: descriptor
 }
 - feedback vector: 0x3ee60025d575: [FeedbackVector] in OldSpace
 - map: 0x3ee600002b2d <Map(FEEDBACK_VECTOR_TYPE)>
 - length: 1
 - shared function info: 0x3ee60025d2f5 <SharedFunctionInfo add>
 - no optimized code
 - tiering state: TieringState::kNone
 - maybe has maglev code: 0
 - maybe has turbofan code: 0
 - invocation count: 92
 - profiler ticks: 0
 - closure feedback cell array: 0x3ee600003f89: [ClosureFeedbackCellArray] in ReadOnlySpace
 - map: 0x3ee600002b05 <Map(CLOSURE_FEEDBACK_CELL_ARRAY_TYPE)>
 - length: 0

 - slot #0 BinaryOp BinaryOp:SignedSmall {
     [0]: 1
  }